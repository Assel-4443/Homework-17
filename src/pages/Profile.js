import React, { useEffect, useState } from "react";
import { fetchProgress, fetchLessons, fetchAchievements, addAchievement } from "../api/api";

const userId = 1; // üîπ –í—Ä–µ–º–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º ID=1

const Profile = () => {
  const [progress, setProgress] = useState([]); // –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ —É—Ä–æ–∫–∏
  const [lessons, setLessons] = useState([]); // –í—Å–µ —É—Ä–æ–∫–∏
  const [achievements, setAchievements] = useState([]); // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const loadData = async () => {
      const userProgress = await fetchProgress(userId);
      const allLessons = await fetchLessons();
      const userAchievements = await fetchAchievements(userId);

      setProgress(userProgress?.completedLessons || []);
      setLessons(allLessons);
      setAchievements(userAchievements);

      checkAchievements(userProgress?.completedLessons || [], userAchievements);
      setLoading(false);
    };

    loadData();
  }, []);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const checkAchievements = async (completedLessons, userAchievements) => {
    const newAchievements = [];

    if (completedLessons.length >= 1 && !userAchievements.some(a => a.id === 1)) {
      newAchievements.push(1); // "–ü–µ—Ä–≤—ã–π —à–∞–≥"
    }
    if (completedLessons.length >= 5 && !userAchievements.some(a => a.id === 2)) {
      newAchievements.push(2); // "–£—á—ë–Ω—ã–π"
    }
    if (completedLessons.length >= 10 && !userAchievements.some(a => a.id === 3)) {
      newAchievements.push(3); // "–ü–æ–ª–∏–≥–ª–æ—Ç"
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    for (const achievementId of newAchievements) {
      await addAchievement(userId, achievementId);
    }
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div>
      <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>

      <h3>üìö –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ —É—Ä–æ–∫–∏:</h3>
      {progress.length > 0 ? (
        <ul>
          {progress.map((lessonId) => {
            const lesson = lessons.find((l) => l.id === lessonId);
            return lesson ? <li key={lesson.id}>{lesson.title}</li> : null;
          })}
        </ul>
      ) : (
        <p>–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤.</p>
      )}

      <h3>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</h3>
      {achievements.length > 0 ? (
        <ul>
          {achievements.map((achievement) => (
            <li key={achievement.id}>üèÖ {achievement.title}</li>
          ))}
        </ul>
      ) : (
        <p>–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.</p>
      )}
    </div>
  );
};

export default Profile;
