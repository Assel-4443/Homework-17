import axios from "axios";

const API_URL = "https://express-server-pcab.onrender.com";  
; 

// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤
export const fetchLessons = async () => {
  try {
    console.log("üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");

    const response = await axios.get(`${API_URL}/api/lessons`, {
      headers: {
        "Content-Type": "application/json",
      },
    });

    console.log("‚úÖ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response);
    console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —É—Ä–æ–∫–∏:", response.data);

    return response.data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–∫–æ–≤:", error.message);
    
    if (error.response) {
      console.error("‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", error.response.status, error.response.data);
    }

    return [];
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –æ–¥–∏–Ω —É—Ä–æ–∫ –ø–æ ID
export const fetchLessonById = async (lessonId) => {
  try {
    console.log(`üîπ –ó–∞–ø—Ä–æ—Å —É—Ä–æ–∫–∞ ID=${lessonId}...`);
    const response = await axios.get(`${API_URL}/api/lessons/${lessonId}`);
    console.log("‚úÖ –£—Ä–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω:", response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–∫–∞ ${lessonId}:`, error);
    return null;
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const fetchProgress = async (userId) => {
  try {
    console.log(`üîπ –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=${userId}...`);
    const response = await axios.get(`${API_URL}/api/progress/${userId}`);
    console.log("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∂–µ–Ω:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:", error);
    return null;
  }
};

// –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const updateProgress = async (userId, progressData) => {
  try {
    console.log(`üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=${userId}...`, progressData);
    const response = await axios.patch(`${API_URL}/api/progress/${userId}`, progressData);
    console.log("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:", error);
    return null;
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const fetchAchievements = async (userId) => {
  try {
    console.log(`üîπ –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID=${userId}...`);
    const response = await axios.get(`${API_URL}/api/achievements/${userId}`);
    console.log("‚úÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:", response.data);
    return response.data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:", error);
    return [];
  }
};

// –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
export const addAchievement = async (userId, achievementId) => {
  try {
    await axios.post(`${API_URL}/api/achievements/${userId}`, { achievementId });
    console.log(`üèÖ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${achievementId} –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:", error);
  }
};

// –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
export const fetchAllAchievements = async () => {
  try {
    const response = await axios.get(`${API_URL}/api/achievements`);
    return response.data;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:", error);
    return [];
  }
};
